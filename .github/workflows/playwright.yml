name: Playwright Tests
on: 
  deployment_status:  
  workflow_dispatch:
    inputs:
      project:
        description: Playwright project to use
      doNotRecord:
        type: boolean
        description: Do not record
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: github.event.deployment_status.state == 'success' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Get PR Number
        uses: actions/github-script@v6
        id: pr-number
        with:
          result-encoding: json
          script: |
            try {
              const results = await github.rest.search.issuesAndPullRequests({
                q: context.sha
              });
              const prs = [...results.data.items].sort((a, b) => a.score - b.score);
              if (prs[0]) {
                return prs[0].number;
              }
            } catch (e) {
              console.error(e);
            }

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci
      
      # https://playwright.dev/docs/ci#github-actions
      # TODO: only install Playwright browsers if project requires
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Tests
        uses: replayio/action-playwright@v0.4.12
        with:
          project: ${{ github.event.inputs.project || 'replay-firefox' }}
          issue-number: ${{ steps.pr-number.outputs.result }}
          apiKey: ${{ secrets.REPLAYWORKSPACEAPIKEY }}
        env:
          RECORD_REPLAY_DONT_RECORD: ${{ github.event.inputs.doNotRecord && '1'}}
          PLAYWRIGHT_TEST_BASE_URL: ${{ github.event.deployment_status.target_url || 'https://www.replayable.dev/' }}
